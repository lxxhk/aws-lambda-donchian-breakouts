
service: breakouts # NOTE: update this with your service name

provider:
  name: aws
  runtime: python3.6
  profile: ${file(../config.${self:provider.stage}.json):breakouts.profile}
  stage: dev
  region: us-east-1
  iamRoleStatements:
   - Effect: "Allow"
     Action: "lambda:InvokeFunction"
     Resource: "*"
   - Effect: "Allow"
     Action: "dynamodb:PutItem"
     Resource: ${self:custom.breakoutTableArn}
   - Effect: Allow
     Action:
       - 's3:PutObject'
       - 's3:GetObject'
     Resource:
       - Fn::Join:
         - ''
         - - ${self:custom.writetobucketArn}
           - '/*'
   - Effect: Allow
     Action:
       - 's3:ListBucket'
     Resource: ${self:custom.writetobucketArn}
   # - Effect: Deny # for sms messaging, need to deny all sns, then allow below
                    # this didn't work. text was denied still
   #   Action:
   #     - 'sns:Publish'
   #   Resource:
   #     - "arn:aws:sns:*:*:*"
   - Effect: Allow
     Action:
       - 'sns:Publish'
     Resource:
       # - ${self:custom.breakoutTopicArn}
       - "*" # need to use * in order to get sms/text to work

  environment:
    INVOKED_FUNCTION_NAME: ${self:functions.breakout_lambda.name}
    BREAKOUT_DBTABLE_NAME: ${file(../config.${self:provider.stage}.json):breakouts.breakoutstable}
    BREAKOUT_BUCKETDATA_NAME: ${file(../config.${self:provider.stage}.json):breakouts.bucketfordata}
    BREAKOUT_SYMBOLS_KEY_NAME: ${file(../config.${self:provider.stage}.json):breakouts.keyforsymbols}
    BREAKOUT_CRITERIA_KEY_NAME: ${file(../config.${self:provider.stage}.json):breakouts.keyforcriteria}
    BREAKOUT_SNS_DATE_KEY_NAME: ${file(../config.${self:provider.stage}.json):breakouts.keyforsnsdate}
    BREAKOUT_TOPIC_ARN: ${self:custom.breakoutTopicArn}
    BREAKOUT_PHONE_NUMBER: ${file(../config.${self:provider.stage}.json):breakouts.telnumber}
    API_KEY: ${file(../config.${self:provider.stage}.json):breakouts.apikey}

custom:
  breakoutsTopic: ${file(../config.${self:provider.stage}.json):breakouts.breakouttopic}
  breakoutTopicArn:
    Fn::Join:
      - ':'
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - ${self:custom.breakoutsTopic}
  writetobucketArn:
    Fn::Join:
      - ':'
      - - arn
        - aws
        - s3
        - ''
        - ''
        - ${file(../config.${self:provider.stage}.json):breakouts.bucketfordata}
  breakoutTableArn:
    Fn::Join:
      - ':'
      - - arn
        - aws
        - dynamodb
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - table/${file(../config.${self:provider.stage}.json):breakouts.breakoutstable}
  pythonRequirements:
    pythonBin: /usr/local/bin/python3.6


functions:
  trigger_breakout_lambdas:
    handler: triggerbreakoutlambdas.trigger_breakout_lambdas
    description: lambda function to trigger individual breakout lambda functions
    name: ${self:service}-${self:provider.stage}-trigger_breakout_lambdas
    timeout: 60 # Timeout for this specific function.  Overrides the default if set in Provider
    memorySize: 1024 # memorySize for this specific function.
  breakout_lambda:
    handler: breakoutlambda.breakout_lambda
    description: lambda function to calculate and alert pending breakouts
    name: ${self:service}-${self:provider.stage}-breakout_lambda
    timeout: 10 # Timeout for this specific function.  Overrides the default if set in Provider
    memorySize: 1024 # memorySize for this specific function.
  breakout_notifications:
    handler: snsbreakoutnotifications.send_breakout_notifications
    description: lambda function to capture breakouts and email or text messages
    name: ${self:service}-${self:provider.stage}-send_breakout_notifications
    timeout: 10 # Timeout for this specific function.  Overrides the default if set in Provider
    memorySize: 1024 # memorySize for this specific function.
  send_datefile_to_s3:
    handler: createdatetotest.send_datefile_to_s3
    description: lambda function to send txt file to s3 with date for sns notifications
    name: ${self:service}-${self:provider.stage}-send_datefile_to_s3
    timeout: 10 # Timeout for this specific function.  Overrides the default if set in Provider
    memorySize: 1024 # memorySize for this specific function.

plugins:
  - serverless-python-requirements

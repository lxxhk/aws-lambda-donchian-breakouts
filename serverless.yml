
service: breakouts # NOTE: update this with your service name

provider:
  name: aws
  runtime: python3.6
  profile: ${file(../config.${self:provider.stage}.json):breakouts.profile}
  stage: dev
  region: us-east-1
  iamRoleStatements:
   - Effect: "Allow"
     Action: "lambda:InvokeFunction"
     Resource: "*"
   - Effect: "Allow"
     Action: "dynamodb:PutItem"
     Resource: ${self:custom.breakoutTableArn}
   - Effect: Allow
     Action:
       - 's3:PutObject'
       - 's3:GetObject'
     Resource:
       - Fn::Join:
         - ''
         - - ${self:custom.writetobucketArn}
           - '/*'
   - Effect: Allow
     Action:
       - 's3:ListBucket'
     Resource: ${self:custom.writetobucketArn}
   # - Effect: Deny # for sms messaging, need to deny all sns, then allow below
   #   Action:
   #     - 'sns:Publish'
   #   Resource:
   #     - "arn:aws:sns:*:*:*"
   - Effect: Allow
     Action:
       - 'sns:Publish'
     Resource:
       # - ${self:custom.breakoutTopicArn}
       - "*"

  environment:
    INVOKED_FUNCTION_NAME: ${self:functions.breakout_lambda.name}
    BREAKOUT_DBTABLE_NAME: ${self:custom.breakoutsTableName}
    BREAKOUT_BUCKETDATA_NAME: ${self:custom.breakoutsBucketName}
    BREAKOUT_SYMBOLS_KEY_NAME: ${self:custom.breakoutsSymbolsFileName}
    BREAKOUT_CRITERIA_KEY_NAME: ${self:custom.breakoutsCriteriaFileName}
    # BREAKOUT_TOPIC_ARN: ${self:custom.breakoutTopicArn}
    BREAKOUT_TOPIC_ARN: "arn:aws:sns:us-east-1:117126657583:SendBreakoutEmails"
    BREAKOUT_PHONE_NUMBER: ${self:custom.breakoutsPhoneNumber}

custom:
  breakoutsTableName: ${file(../config.${self:provider.stage}.json):breakouts.breakoutstable}
  breakoutsBucketName: ${file(../config.${self:provider.stage}.json):breakouts.bucketfordata}
  breakoutsSymbolsFileName: ${file(../config.${self:provider.stage}.json):breakouts.keyforsymbols}
  breakoutsCriteriaFileName: ${file(../config.${self:provider.stage}.json):breakouts.keyforcriteria}
  breakoutsTopic: ${file(../config.${self:provider.stage}.json):breakouts.breakouttopic}
  breakoutsPhoneNumber: ${file(../config.${self:provider.stage}.json):breakouts.telnumber}
  breakoutTopicArn:
    Fn::Join:
      - ':'
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - ${self:custom.breakoutsTopic}
  writetobucketArn:
    Fn::Join:
      - ':'
      - - arn
        - aws
        - s3
        - ''
        - ''
        - ${self:custom.breakoutsBucketName}
  breakoutTableArn:
    Fn::Join:
      - ':'
      - - arn
        - aws
        - dynamodb
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - table/${self:custom.breakoutsTableName}
  pythonRequirements:
    pythonBin: /usr/local/bin/python3.6m

# resources:
#   Resources:
#   {
#     "Version": "2012-10-17",
#     "Statement": [
#         {
#             "Action": [
#                 "sns:*"
#             ],
#             "Effect": "Allow",
#             "Resource": "*"
#         }
#     ]
# }


functions:
  trigger_breakout_lambdas:
    handler: triggerbreakoutlambdas.trigger_breakout_lambdas
    description: lambda function to trigger individual breakout lambda functions
    name: ${self:service}-${self:provider.stage}-trigger_breakout_lambdas
    timeout: 6 # Timeout for this specific function.  Overrides the default if set in Provider
    memorySize: 1024 # memorySize for this specific function.
  breakout_lambda:
    handler: breakoutlambda.breakout_lambda
    description: lambda function to calculate and alert pending breakouts
    name: ${self:service}-${self:provider.stage}-breakout_lambda
    timeout: 6 # Timeout for this specific function.  Overrides the default if set in Provider
    memorySize: 1024 # memorySize for this specific function.
  breakout_notifications:
    handler: snsbreakoutnotifications.send_breakout_notifications
    description: lambda function to capture breakouts and email or text messages
    name: ${self:service}-${self:provider.stage}-send_breakout_notifications
    timeout: 6 # Timeout for this specific function.  Overrides the default if set in Provider
    memorySize: 1024 # memorySize for this specific function.

plugins:
  - serverless-python-requirements
